{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ced\\\\Desktop\\\\Uni\\\\Inforoute\\\\TP1_Inforoute\\\\tp1_inforoute\\\\src\\\\components\\\\ImageWord.js\";\nimport lienData from './../images/3elien.json';\nimport Resizer from \"react-image-file-resizer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = getImagePaths(require.context('./../images/3elien', false, /\\.(png|jpe?g|svg)$/));\nexport function ImageWord() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: lienData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this), data.imageListe.map((imageName, indexImage) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: imageName == images ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[imageName + '.png']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 41\n        }, this)\n      }, indexImage, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 33\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }, this), data.phrase]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 21\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = ImageWord;\n\nfunction getImagePaths(i) {\n  let images = {};\n  i.keys().map(item => {\n    images[item.replace('./', '')] = i(item);\n  });\n  return images;\n}\n\nconst resizeFile = file => new Promise(resolve => {\n  Resizer.imageFileResizer(file, 300, 300, \"JPEG\", 100, 0, uri => {\n    resolve(uri);\n  }, \"base64\");\n});\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageWord\");","map":{"version":3,"names":["lienData","Resizer","images","getImagePaths","require","context","ImageWord","map","data","index","imageListe","imageName","indexImage","phrase","i","keys","item","replace","resizeFile","file","Promise","resolve","imageFileResizer","uri"],"sources":["C:/Users/Ced/Desktop/Uni/Inforoute/TP1_Inforoute/tp1_inforoute/src/components/ImageWord.js"],"sourcesContent":["import lienData from './../images/3elien.json';\r\nimport Resizer from \"react-image-file-resizer\";\r\n\r\n\r\nconst images = getImagePaths(require.context('./../images/3elien', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nexport function ImageWord() {\r\n    return (\r\n        <div>\r\n            {\r\n                lienData.map((data, index) => (\r\n                    <div key={index}>\r\n                        \r\n                        <br />\r\n                        {\r\n                            data.imageListe.map((imageName, indexImage) => (\r\n                                <div key={indexImage}>\r\n                                    \r\n                                    {imageName == images ? (\r\n                                        null\r\n                                    ) : (\r\n                                        <img   src={images[imageName + '.png']} /> \r\n                                    )\r\n                                    }\r\n                                </div>\r\n                            ))\r\n                        }\r\n                        <br />\r\n                        {data.phrase}\r\n                    </div>\r\n                ))\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction getImagePaths(i) {\r\n\r\n    let images = {};\r\n    i.keys().map((item) => { images[item.replace('./', '')] = i(item); });\r\n    return images;\r\n}\r\nconst resizeFile = (file) =>\r\n  new Promise((resolve) => {\r\n    Resizer.imageFileResizer(\r\n      file,\r\n      300,\r\n      300,\r\n      \"JPEG\",\r\n      100,\r\n      0,\r\n      (uri) => {\r\n        resolve(uri);\r\n      },\r\n      \"base64\"\r\n    );\r\n  });"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,yBAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAGA,MAAMC,MAAM,GAAGC,aAAa,CAACC,OAAO,CAACC,OAAR,CAAgB,oBAAhB,EAAsC,KAAtC,EAA6C,oBAA7C,CAAD,CAA5B;AAEA,OAAO,SAASC,SAAT,GAAqB;EACxB,oBACI;IAAA,UAEQN,QAAQ,CAACO,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACT;MAAA,wBAEI;QAAA;QAAA;QAAA;MAAA,QAFJ,EAIQD,IAAI,CAACE,UAAL,CAAgBH,GAAhB,CAAoB,CAACI,SAAD,EAAYC,UAAZ,kBAChB;QAAA,UAEKD,SAAS,IAAIT,MAAb,GACG,IADH,gBAGG;UAAO,GAAG,EAAEA,MAAM,CAACS,SAAS,GAAG,MAAb;QAAlB;UAAA;UAAA;UAAA;QAAA;MALR,GAAUC,UAAV;QAAA;QAAA;QAAA;MAAA,QADJ,CAJR,eAgBI;QAAA;QAAA;QAAA;MAAA,QAhBJ,EAiBKJ,IAAI,CAACK,MAjBV;IAAA,GAAUJ,KAAV;MAAA;MAAA;MAAA;IAAA,QADJ;EAFR;IAAA;IAAA;IAAA;EAAA,QADJ;AA2BH;KA5BeH,S;;AA8BhB,SAASH,aAAT,CAAuBW,CAAvB,EAA0B;EAEtB,IAAIZ,MAAM,GAAG,EAAb;EACAY,CAAC,CAACC,IAAF,GAASR,GAAT,CAAcS,IAAD,IAAU;IAAEd,MAAM,CAACc,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiCH,CAAC,CAACE,IAAD,CAAlC;EAA2C,CAApE;EACA,OAAOd,MAAP;AACH;;AACD,MAAMgB,UAAU,GAAIC,IAAD,IACjB,IAAIC,OAAJ,CAAaC,OAAD,IAAa;EACvBpB,OAAO,CAACqB,gBAAR,CACEH,IADF,EAEE,GAFF,EAGE,GAHF,EAIE,MAJF,EAKE,GALF,EAME,CANF,EAOGI,GAAD,IAAS;IACPF,OAAO,CAACE,GAAD,CAAP;EACD,CATH,EAUE,QAVF;AAYD,CAbD,CADF"},"metadata":{},"sourceType":"module"}