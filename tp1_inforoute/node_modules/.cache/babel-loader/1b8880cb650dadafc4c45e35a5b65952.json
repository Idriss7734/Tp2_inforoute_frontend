{"ast":null,"code":"import { getImagePaths } from './ImageWord';\nimport { getAudioName } from './ImageWord';\nimport AudioTest from './Audio.js';\nexport function ImageQuiz(data, p, path, num) {\n  const images = getImagePaths(require.context('./../images/', false, /\\.(png|jpe?g|svg)$/));\n  let name = 'question';\n  let nameReponse = 'response_1';\n  let questionPath = \"question_\" + (num + 1);\n  let pathQuiz = path.replace(\"Quiz\", \"\");\n  /* let choix =\r\n      <div id={p}>\r\n          {p}\r\n          <AudioTest path={pathQuiz + \"/\" + questionPath} name={name} />\r\n          {\r\n              data.reponse.map((choix, indexRep) => (\r\n                  <div className=\"check\" id={indexRep}>\r\n                      {\r\n                          choix.imageListe.map((imageName, indexImage) => (\r\n                              <u key={indexImage}>\r\n                                  {imageName == images ? (\r\n                                      null\r\n                                  ) : (\r\n                                      <img id=\"imageWord\" src={images[imageName + '.png']} />\r\n                                  )\r\n                                  }\r\n                              </u>\r\n                          ))\r\n                      }\r\n                      <br />\r\n                      <input type=\"checkbox\" value={indexRep} />{choix.phrase}\r\n                     \r\n                      <AudioTest path={pathQuiz + \"/\" + questionPath} name={nameReponse = getAudioName(nameReponse, indexRep)} />\r\n                  </div>\r\n              ))\r\n          }\r\n      </div> */\n\n  let choix = \"aaaaa\";\n  return choix;\n}\n_c = ImageQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageQuiz\");","map":{"version":3,"names":["getImagePaths","getAudioName","AudioTest","ImageQuiz","data","p","path","num","images","require","context","name","nameReponse","questionPath","pathQuiz","replace","choix"],"sources":["C:/Users/Ced/Desktop/Uni/Inforoute/TP1_Inforoute/tp1_inforoute/src/components/ImageQuiz.js"],"sourcesContent":["import { getImagePaths } from './ImageWord';\r\nimport { getAudioName } from './ImageWord';\r\nimport AudioTest from './Audio.js';\r\n\r\nexport function ImageQuiz(data, p, path, num) {\r\n    const images = getImagePaths(require.context('./../images/', false, /\\.(png|jpe?g|svg)$/));\r\n    let name = 'question';\r\n    let nameReponse = 'response_1';\r\n    let questionPath = \"question_\" + (num + 1);\r\n\r\n    let pathQuiz = path.replace(\"Quiz\", \"\")\r\n    \r\n    /* let choix =\r\n        <div id={p}>\r\n            {p}\r\n            <AudioTest path={pathQuiz + \"/\" + questionPath} name={name} />\r\n            {\r\n                data.reponse.map((choix, indexRep) => (\r\n                    <div className=\"check\" id={indexRep}>\r\n                        {\r\n                            choix.imageListe.map((imageName, indexImage) => (\r\n                                <u key={indexImage}>\r\n                                    {imageName == images ? (\r\n                                        null\r\n                                    ) : (\r\n                                        <img id=\"imageWord\" src={images[imageName + '.png']} />\r\n                                    )\r\n                                    }\r\n                                </u>\r\n                            ))\r\n                        }\r\n                        <br />\r\n                        <input type=\"checkbox\" value={indexRep} />{choix.phrase}\r\n                       \r\n                        <AudioTest path={pathQuiz + \"/\" + questionPath} name={nameReponse = getAudioName(nameReponse, indexRep)} />\r\n                    </div>\r\n                ))\r\n            }\r\n        </div> */\r\n        let choix = \"aaaaa\";\r\n    return (choix);\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,aAA9B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,CAAzB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuC;EAC1C,MAAMC,MAAM,GAAGR,aAAa,CAACS,OAAO,CAACC,OAAR,CAAgB,cAAhB,EAAgC,KAAhC,EAAuC,oBAAvC,CAAD,CAA5B;EACA,IAAIC,IAAI,GAAG,UAAX;EACA,IAAIC,WAAW,GAAG,YAAlB;EACA,IAAIC,YAAY,GAAG,eAAeN,GAAG,GAAG,CAArB,CAAnB;EAEA,IAAIO,QAAQ,GAAGR,IAAI,CAACS,OAAL,CAAa,MAAb,EAAqB,EAArB,CAAf;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EACQ,IAAIC,KAAK,GAAG,OAAZ;EACJ,OAAQA,KAAR;AACH;KArCeb,S"},"metadata":{},"sourceType":"module"}