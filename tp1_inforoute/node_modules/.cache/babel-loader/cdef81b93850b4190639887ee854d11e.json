{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ced\\\\Desktop\\\\Uni\\\\Inforoute\\\\TP1_Inforoute\\\\tp1_inforoute\\\\src\\\\components\\\\ImageQuiz.js\";\nimport { getImagePaths } from './ImageWord';\nimport { getAudioName } from './ImageWord';\nimport { Container } from 'react-bootstrap';\nimport AudioTest from './Audio.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ImageQuiz(data, path, num) {\n  const images = getImagePaths(require.context('./../images/', false, /\\.(png|jpe?g|svg)$/));\n  let name = 'question';\n  let nameReponse = 'response_1';\n  let questionPath = \"question_\" + (num + 1);\n  let pathQuiz = path.replace(\"Quiz\", \"\");\n\n  let choix = /*#__PURE__*/_jsxDEV(Container, {\n    id: data.phrase,\n    children: [/*#__PURE__*/_jsxDEV(\"center\", {\n      className: \"border rounded\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"u\", {\n          children: [/*#__PURE__*/_jsxDEV(AudioTest, {\n            path: pathQuiz + \"/\" + questionPath,\n            name: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n            children: data.phrase\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 86\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), data.reponse.map((choix, indexRep) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"check\",\n      id: indexRep,\n      children: [choix.imageListe.map((imageName, indexImage) => /*#__PURE__*/_jsxDEV(\"u\", {\n        children: imageName == images ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"imageWord\",\n          src: images[imageName + '.png']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 45\n        }, this)\n      }, indexImage, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 33\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(AudioTest, {\n        path: pathQuiz + \"/\" + questionPath,\n        name: nameReponse = getAudioName(nameReponse, indexRep)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        value: indexRep,\n        className: choix.checkbox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), choix.phrase]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n\n  return choix;\n}\n_c = ImageQuiz;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageQuiz\");","map":{"version":3,"names":["getImagePaths","getAudioName","Container","AudioTest","ImageQuiz","data","path","num","images","require","context","name","nameReponse","questionPath","pathQuiz","replace","choix","phrase","reponse","map","indexRep","imageListe","imageName","indexImage","checkbox"],"sources":["C:/Users/Ced/Desktop/Uni/Inforoute/TP1_Inforoute/tp1_inforoute/src/components/ImageQuiz.js"],"sourcesContent":["import { getImagePaths } from './ImageWord';\r\nimport { getAudioName } from './ImageWord';\r\nimport { Container } from 'react-bootstrap';\r\nimport AudioTest from './Audio.js';\r\n\r\nexport function ImageQuiz(data, path, num) {\r\n    const images = getImagePaths(require.context('./../images/', false, /\\.(png|jpe?g|svg)$/));\r\n    let name = 'question';\r\n    let nameReponse = 'response_1';\r\n    let questionPath = \"question_\" + (num + 1);\r\n\r\n    let pathQuiz = path.replace(\"Quiz\", \"\")\r\n    \r\n    let choix =\r\n        <Container id={data.phrase}>\r\n            <center className='border rounded'>\r\n                <h3><u><AudioTest path={pathQuiz + \"/\" + questionPath} name={name} /><b>{data.phrase}</b></u></h3>\r\n            </center>\r\n            {\r\n                data.reponse.map((choix, indexRep) => (\r\n                    <div className=\"check\" id={indexRep}>\r\n                        {\r\n                            choix.imageListe.map((imageName, indexImage) => (\r\n                                <u key={indexImage}>\r\n                                    {\r\n                                        imageName == images ? (\r\n                                            null\r\n                                        ) : (\r\n                                            <img id=\"imageWord\" src={images[imageName + '.png']} />\r\n                                        )\r\n                                    }\r\n                                </u>\r\n                            ))\r\n                        }\r\n                        <br/>\r\n                        <AudioTest path={pathQuiz + \"/\" + questionPath} name={nameReponse = getAudioName(nameReponse, indexRep)}/>\r\n                        <input type=\"checkbox\" value={indexRep} className={choix.checkbox}/>\r\n                        {choix.phrase}\r\n                    </div>\r\n                ))\r\n            }\r\n        </Container>\r\n    return (choix);\r\n}"],"mappings":";AAAA,SAASA,aAAT,QAA8B,aAA9B;AACA,SAASC,YAAT,QAA6B,aAA7B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,GAA/B,EAAoC;EACvC,MAAMC,MAAM,GAAGR,aAAa,CAACS,OAAO,CAACC,OAAR,CAAgB,cAAhB,EAAgC,KAAhC,EAAuC,oBAAvC,CAAD,CAA5B;EACA,IAAIC,IAAI,GAAG,UAAX;EACA,IAAIC,WAAW,GAAG,YAAlB;EACA,IAAIC,YAAY,GAAG,eAAeN,GAAG,GAAG,CAArB,CAAnB;EAEA,IAAIO,QAAQ,GAAGR,IAAI,CAACS,OAAL,CAAa,MAAb,EAAqB,EAArB,CAAf;;EAEA,IAAIC,KAAK,gBACL,QAAC,SAAD;IAAW,EAAE,EAAEX,IAAI,CAACY,MAApB;IAAA,wBACI;MAAQ,SAAS,EAAC,gBAAlB;MAAA,uBACI;QAAA,uBAAI;UAAA,wBAAG,QAAC,SAAD;YAAW,IAAI,EAAEH,QAAQ,GAAG,GAAX,GAAiBD,YAAlC;YAAgD,IAAI,EAAEF;UAAtD;YAAA;YAAA;YAAA;UAAA,QAAH,eAAiE;YAAA,UAAIN,IAAI,CAACY;UAAT;YAAA;YAAA;YAAA;UAAA,QAAjE;QAAA;UAAA;UAAA;UAAA;QAAA;MAAJ;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QADJ,EAKQZ,IAAI,CAACa,OAAL,CAAaC,GAAb,CAAiB,CAACH,KAAD,EAAQI,QAAR,kBACb;MAAK,SAAS,EAAC,OAAf;MAAuB,EAAE,EAAEA,QAA3B;MAAA,WAEQJ,KAAK,CAACK,UAAN,CAAiBF,GAAjB,CAAqB,CAACG,SAAD,EAAYC,UAAZ,kBACjB;QAAA,UAEQD,SAAS,IAAId,MAAb,GACI,IADJ,gBAGI;UAAK,EAAE,EAAC,WAAR;UAAoB,GAAG,EAAEA,MAAM,CAACc,SAAS,GAAG,MAAb;QAA/B;UAAA;UAAA;UAAA;QAAA;MALZ,GAAQC,UAAR;QAAA;QAAA;QAAA;MAAA,QADJ,CAFR,eAcI;QAAA;QAAA;QAAA;MAAA,QAdJ,eAeI,QAAC,SAAD;QAAW,IAAI,EAAET,QAAQ,GAAG,GAAX,GAAiBD,YAAlC;QAAgD,IAAI,EAAED,WAAW,GAAGX,YAAY,CAACW,WAAD,EAAcQ,QAAd;MAAhF;QAAA;QAAA;QAAA;MAAA,QAfJ,eAgBI;QAAO,IAAI,EAAC,UAAZ;QAAuB,KAAK,EAAEA,QAA9B;QAAwC,SAAS,EAAEJ,KAAK,CAACQ;MAAzD;QAAA;QAAA;QAAA;MAAA,QAhBJ,EAiBKR,KAAK,CAACC,MAjBX;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,CALR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;;EA6BA,OAAQD,KAAR;AACH;KAtCeZ,S"},"metadata":{},"sourceType":"module"}