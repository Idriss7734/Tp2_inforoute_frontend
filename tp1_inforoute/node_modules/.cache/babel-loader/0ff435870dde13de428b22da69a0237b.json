{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ced\\\\Desktop\\\\Uni\\\\Inforoute\\\\TP1_Inforoute\\\\tp1_inforoute\\\\src\\\\components\\\\DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport \"./../index.css\"; //source https://blog.openreplay.com/create-a-drag-and-drop-zone-in-react-with-react-dropzone\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dropzone(_ref) {\n  _s();\n\n  let {\n    open\n  } = _ref;\n  const {\n    getRootProps,\n    getInputProps,\n    acceptedFiles\n  } = useDropzone({});\n  const files = acceptedFiles.map(file => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [file.path, \" - \", file.size, \" bytes\"]\n  }, file.path, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: \"dropzone\"\n      }),\n      id: \"dragndrop\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: files\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dropzone, \"aJUAMf4kNWVt8BTyOxmpyUD+lnc=\", false, function () {\n  return [useDropzone];\n});\n\n_c = Dropzone;\nexport default Dropzone;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dropzone\");","map":{"version":3,"names":["React","useDropzone","Dropzone","open","getRootProps","getInputProps","acceptedFiles","files","map","file","path","size","className"],"sources":["C:/Users/Ced/Desktop/Uni/Inforoute/TP1_Inforoute/tp1_inforoute/src/components/DragDrop.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport \"./../index.css\";\r\n//source https://blog.openreplay.com/create-a-drag-and-drop-zone-in-react-with-react-dropzone\r\nfunction Dropzone({ open }) {\r\n  const { getRootProps, getInputProps, acceptedFiles } =\r\n    useDropzone({});\r\n\r\n  const files = acceptedFiles.map((file) => (\r\n    <li key={file.path}>\r\n      {file.path} - {file.size} bytes\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div {...getRootProps({ className: \"dropzone\" })}id=\"dragndrop\">\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here</p>\r\n      </div>\r\n      <aside>\r\n        <ul>{files}</ul>\r\n      </aside>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dropzone;"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAO,gBAAP,C,CACA;;;;AACA,SAASC,QAAT,OAA4B;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EAC1B,MAAM;IAAEC,YAAF;IAAgBC,aAAhB;IAA+BC;EAA/B,IACJL,WAAW,CAAC,EAAD,CADb;EAGA,MAAMM,KAAK,GAAGD,aAAa,CAACE,GAAd,CAAmBC,IAAD,iBAC9B;IAAA,WACGA,IAAI,CAACC,IADR,SACiBD,IAAI,CAACE,IADtB;EAAA,GAASF,IAAI,CAACC,IAAd;IAAA;IAAA;IAAA;EAAA,QADY,CAAd;EAMA,oBACE;IAAK,SAAS,EAAC,WAAf;IAAA,wBACE,oBAASN,YAAY,CAAC;QAAEQ,SAAS,EAAE;MAAb,CAAD,CAArB;MAAiD,EAAE,EAAC,WAApD;MAAA,wBACE,sBAAWP,aAAa;MAAxB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAA,uBACE;QAAA,UAAKE;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GArBQL,Q;UAELD,W;;;KAFKC,Q;AAuBT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}