{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ced\\\\Desktop\\\\Uni\\\\Inforoute\\\\TP1_Inforoute\\\\tp1_inforoute\\\\src\\\\components\\\\DragDrop.js\",\n    _s = $RefreshSig$();\n\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction dragDrop(props) {\n  _s();\n\n  const [files, setFiles] = useState([]);\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    accept: 'image/*',\n    onDrop: acceptedFiles => {\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })));\n    }\n  });\n  const thumbs = files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: thumb,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: thumbInner,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: file.preview,\n        style: img\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, file.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n  useEffect(() => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    files.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [files]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", { ...getRootProps({\n        className: 'dropzone'\n      }),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", { ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag 'n' drop some files here, or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"aside\", {\n      style: thumbsContainer,\n      children: thumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(dragDrop, \"HtUHmGo3hwDZKSmIKg3riAANKQ4=\", false, function () {\n  return [useDropzone];\n});\n\nexport default dragDrop;","map":{"version":3,"names":["useDropzone","dragDrop","props","files","setFiles","useState","getRootProps","getInputProps","accept","onDrop","acceptedFiles","map","file","Object","assign","preview","URL","createObjectURL","thumbs","thumb","thumbInner","img","name","useEffect","forEach","revokeObjectURL","className","thumbsContainer"],"sources":["C:/Users/Ced/Desktop/Uni/Inforoute/TP1_Inforoute/tp1_inforoute/src/components/DragDrop.js"],"sourcesContent":["import {useDropzone} from 'react-dropzone';\r\n\r\nfunction dragDrop(props) {\r\n  const [files, setFiles] = useState([]);\r\n  const {getRootProps, getInputProps} = useDropzone({\r\n    accept: 'image/*',\r\n    onDrop: acceptedFiles => {\r\n      setFiles(acceptedFiles.map(file => Object.assign(file, {\r\n        preview: URL.createObjectURL(file)\r\n      })));\r\n    }\r\n  });\r\n\r\n  const thumbs = files.map(file => (\r\n    <div style={thumb} key={file.name}>\r\n      <div style={thumbInner}>\r\n        <img\r\n          src={file.preview}\r\n          style={img}\r\n        />\r\n      </div>\r\n    </div>\r\n  ));\r\n\r\n  useEffect(() => {\r\n    // Make sure to revoke the data uris to avoid memory leaks\r\n    files.forEach(file => URL.revokeObjectURL(file.preview));\r\n  }, [files]);\r\n\r\n  return (\r\n    <section className=\"container\">\r\n      <div {...getRootProps({className: 'dropzone'})}>\r\n        <input {...getInputProps()} />\r\n        <p>Drag 'n' drop some files here, or click to select files</p>\r\n      </div>\r\n      <aside style={thumbsContainer}>\r\n        {thumbs}\r\n      </aside>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default dragDrop"],"mappings":";;;AAAA,SAAQA,WAAR,QAA0B,gBAA1B;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACvB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM;IAACC,YAAD;IAAeC;EAAf,IAAgCP,WAAW,CAAC;IAChDQ,MAAM,EAAE,SADwC;IAEhDC,MAAM,EAAEC,aAAa,IAAI;MACvBN,QAAQ,CAACM,aAAa,CAACC,GAAd,CAAkBC,IAAI,IAAIC,MAAM,CAACC,MAAP,CAAcF,IAAd,EAAoB;QACrDG,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBL,IAApB;MAD4C,CAApB,CAA1B,CAAD,CAAR;IAGD;EAN+C,CAAD,CAAjD;EASA,MAAMM,MAAM,GAAGf,KAAK,CAACQ,GAAN,CAAUC,IAAI,iBAC3B;IAAK,KAAK,EAAEO,KAAZ;IAAA,uBACE;MAAK,KAAK,EAAEC,UAAZ;MAAA,uBACE;QACE,GAAG,EAAER,IAAI,CAACG,OADZ;QAEE,KAAK,EAAEM;MAFT;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF,GAAwBT,IAAI,CAACU,IAA7B;IAAA;IAAA;IAAA;EAAA,QADa,CAAf;EAWAC,SAAS,CAAC,MAAM;IACd;IACApB,KAAK,CAACqB,OAAN,CAAcZ,IAAI,IAAII,GAAG,CAACS,eAAJ,CAAoBb,IAAI,CAACG,OAAzB,CAAtB;EACD,CAHQ,EAGN,CAACZ,KAAD,CAHM,CAAT;EAKA,oBACE;IAAS,SAAS,EAAC,WAAnB;IAAA,wBACE,oBAASG,YAAY,CAAC;QAACoB,SAAS,EAAE;MAAZ,CAAD,CAArB;MAAA,wBACE,sBAAWnB,aAAa;MAAxB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAKE;MAAO,KAAK,EAAEoB,eAAd;MAAA,UACGT;IADH;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD;;GAtCQjB,Q;UAE+BD,W;;;AAsCxC,eAAeC,QAAf"},"metadata":{},"sourceType":"module"}