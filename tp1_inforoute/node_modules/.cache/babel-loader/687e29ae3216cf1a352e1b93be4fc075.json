{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ced\\\\Desktop\\\\Uni\\\\Inforoute\\\\TP1_Inforoute\\\\tp1_inforoute\\\\src\\\\components\\\\ImageWord.js\";\nimport { ImageQuiz } from './ImageQuiz';\nimport AudioTest from './Audio.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ImageWord(path, isQuiz) {\n  var _lienData$texte;\n\n  let lienData = require('./../texte/' + path + '.json'); //const shuffle = arr => [...arr].sort(() => Math.random() - 0.5);\n\n\n  let images = getImagePaths(require.context(\"./../images/\", false, /\\.(png|jpe?g|svg)$/));\n  let name = 'sentence_0';\n  let ret = (_lienData$texte = lienData.texte) === null || _lienData$texte === void 0 ? void 0 : _lienData$texte.map((phrase, imageTitre, i) => {\n    var _phrase$imageListe;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: (_phrase$imageListe = phrase.imageListe) === null || _phrase$imageListe === void 0 ? void 0 : _phrase$imageListe.map((imageName, indexImage) => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: imageName,\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"u\", {\n          children: imageName == images ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n            id: \"imageWord\",\n            src: images[imageName + '.png']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this)\n        }, indexImage, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }, this), phrase.phrase, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, imageName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this))\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this);\n  });\n  if (isQuiz) return (//shuffle(ret)\n    null\n  );else return ret;\n}\n_c = ImageWord;\nexport function getAudioName(name, index) {\n  name = name.replace(index.toString(), (index + 1).toString());\n  return name;\n}\nexport function getImagePaths(i) {\n  let images = {};\n  i.keys().map(item => {\n    images[item.replace('./', '')] = i(item);\n  });\n  return images;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageWord\");","map":{"version":3,"names":["ImageQuiz","AudioTest","ImageWord","path","isQuiz","lienData","require","images","getImagePaths","context","name","ret","texte","map","phrase","imageTitre","i","imageListe","imageName","indexImage","getAudioName","index","replace","toString","keys","item"],"sources":["C:/Users/Ced/Desktop/Uni/Inforoute/TP1_Inforoute/tp1_inforoute/src/components/ImageWord.js"],"sourcesContent":["import { ImageQuiz } from './ImageQuiz';\r\nimport AudioTest from './Audio.js';\r\n\r\nexport function ImageWord(path, isQuiz) {\r\n\r\n    let lienData = require('./../texte/' + path + '.json');\r\n    //const shuffle = arr => [...arr].sort(() => Math.random() - 0.5);\r\n\r\n    let images = getImagePaths(require.context((\"./../images/\"), false, /\\.(png|jpe?g|svg)$/));\r\n    let name = 'sentence_0';\r\n   \r\n    let ret = lienData.texte?.map((phrase, imageTitre, i) => (\r\n        <div key={i} >\r\n            {   \r\n            phrase.imageListe?.map((imageName, indexImage) => (\r\n                <div key={imageName} id={imageName}>\r\n                    \r\n                    <br />\r\n                        <u key={indexImage}>\r\n                            {imageName == images ? (\r\n                                null\r\n                            ) : (\r\n                                <img id=\"imageWord\" src={images[imageName + '.png']} />\r\n                            )\r\n                            }\r\n                        </u>\r\n                        {phrase.phrase}\r\n                    <br />\r\n                    {/* {\r\n                        isQuiz ?\r\n                            (\r\n                                ImageQuiz(phrase, phrase.phrase, path, index)\r\n\r\n                            ) : (\r\n                                phrase.phrase\r\n                            )\r\n                    }\r\n                    {\r\n                        isQuiz ?\r\n                            (\r\n                                null\r\n\r\n                            ) : (\r\n                                <AudioTest path={path} name={(name = getAudioName(name, index))} />\r\n                            )\r\n                    } */}\r\n                </div>\r\n            ))\r\n            }\r\n        </div>\r\n    ))\r\n    if (isQuiz)\r\n        return (\r\n            //shuffle(ret)\r\n            null\r\n            );\r\n    else\r\n        return (ret);\r\n\r\n}\r\n\r\nexport function getAudioName(name, index) {\r\n    name = name.replace(index.toString(), (index + 1).toString())\r\n    return name;\r\n}\r\n\r\nexport function getImagePaths(i) {\r\n    let images = {};\r\n    i.keys().map((item) => { images[item.replace('./', '')] = i(item); });\r\n    return images;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;EAAA;;EAEpC,IAAIC,QAAQ,GAAGC,OAAO,CAAC,gBAAgBH,IAAhB,GAAuB,OAAxB,CAAtB,CAFoC,CAGpC;;;EAEA,IAAII,MAAM,GAAGC,aAAa,CAACF,OAAO,CAACG,OAAR,CAAiB,cAAjB,EAAkC,KAAlC,EAAyC,oBAAzC,CAAD,CAA1B;EACA,IAAIC,IAAI,GAAG,YAAX;EAEA,IAAIC,GAAG,sBAAGN,QAAQ,CAACO,KAAZ,oDAAG,gBAAgBC,GAAhB,CAAoB,CAACC,MAAD,EAASC,UAAT,EAAqBC,CAArB;IAAA;;IAAA,oBAC1B;MAAA,gCAEIF,MAAM,CAACG,UAFX,uDAEI,mBAAmBJ,GAAnB,CAAuB,CAACK,SAAD,EAAYC,UAAZ,kBACnB;QAAqB,EAAE,EAAED,SAAzB;QAAA,wBAEI;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGQ;UAAA,UACKA,SAAS,IAAIX,MAAb,GACG,IADH,gBAGG;YAAK,EAAE,EAAC,WAAR;YAAoB,GAAG,EAAEA,MAAM,CAACW,SAAS,GAAG,MAAb;UAA/B;YAAA;YAAA;YAAA;UAAA;QAJR,GAAQC,UAAR;UAAA;UAAA;UAAA;QAAA,QAHR,EAWSL,MAAM,CAACA,MAXhB,eAYI;UAAA;UAAA;UAAA;QAAA,QAZJ;MAAA,GAAUI,SAAV;QAAA;QAAA;QAAA;MAAA,QADJ;IAFJ,GAAUF,CAAV;MAAA;MAAA;MAAA;IAAA,QAD0B;EAAA,CAApB,CAAV;EAwCA,IAAIZ,MAAJ,EACI,OACI;IACA;EAFJ,EADJ,KAMI,OAAQO,GAAR;AAEP;KAxDeT,S;AA0DhB,OAAO,SAASkB,YAAT,CAAsBV,IAAtB,EAA4BW,KAA5B,EAAmC;EACtCX,IAAI,GAAGA,IAAI,CAACY,OAAL,CAAaD,KAAK,CAACE,QAAN,EAAb,EAA+B,CAACF,KAAK,GAAG,CAAT,EAAYE,QAAZ,EAA/B,CAAP;EACA,OAAOb,IAAP;AACH;AAED,OAAO,SAASF,aAAT,CAAuBQ,CAAvB,EAA0B;EAC7B,IAAIT,MAAM,GAAG,EAAb;EACAS,CAAC,CAACQ,IAAF,GAASX,GAAT,CAAcY,IAAD,IAAU;IAAElB,MAAM,CAACkB,IAAI,CAACH,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiCN,CAAC,CAACS,IAAD,CAAlC;EAA2C,CAApE;EACA,OAAOlB,MAAP;AACH"},"metadata":{},"sourceType":"module"}