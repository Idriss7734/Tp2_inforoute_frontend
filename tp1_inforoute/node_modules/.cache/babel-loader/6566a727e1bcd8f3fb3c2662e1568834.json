{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ced\\\\Desktop\\\\Uni\\\\Inforoute\\\\TP1_Inforoute\\\\tp1_inforoute\\\\src\\\\components\\\\ImageWord.js\";\nimport { ImageQuiz } from './ImageQuiz';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst images = getImagePaths(require.context('./../images/', false, /\\.(png|jpe?g|svg)$/));\nexport function ImageWord(path, isQuiz) {\n  let lienData = require('./../' + path + '.json');\n\n  console.log(lienData);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [lienData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      id: index,\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }, this), data.imageListe.map((imageName, indexImage) => /*#__PURE__*/_jsxDEV(\"u\", {\n        children: imageName == images ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n          id: \"imageWord\",\n          src: images[imageName + '.png']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 41\n        }, this)\n      }, indexImage, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 33\n      }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }, this), isQuiz ? ImageQuiz(data.phrase) : data.phrase]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }, this)), console.log(lienData)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_c = ImageWord;\n\nfunction getImagePaths(i) {\n  let images = {};\n  i.keys().map(item => {\n    images[item.replace('./', '')] = i(item);\n  });\n  return images;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageWord\");","map":{"version":3,"names":["ImageQuiz","images","getImagePaths","require","context","ImageWord","path","isQuiz","lienData","console","log","map","data","index","imageListe","imageName","indexImage","phrase","i","keys","item","replace"],"sources":["C:/Users/Ced/Desktop/Uni/Inforoute/TP1_Inforoute/tp1_inforoute/src/components/ImageWord.js"],"sourcesContent":["import { ImageQuiz } from './ImageQuiz';\r\n\r\n\r\nconst images = getImagePaths(require.context('./../images/', false, /\\.(png|jpe?g|svg)$/));\r\n\r\nexport function ImageWord(path, isQuiz) {\r\n    let lienData = require('./../' + path + '.json');\r\n        console.log(lienData);\r\n    return (\r\n        <div>\r\n            {\r\n                lienData.map((data, index) => (\r\n                    <div key={index} id={index}>\r\n                        \r\n                        <br />\r\n                        {\r\n                            data.imageListe.map((imageName, indexImage) => (\r\n                                <u key={indexImage}>\r\n\r\n                                    {imageName == images ? (\r\n                                        null\r\n                                    ) : (\r\n                                        <img id=\"imageWord\" src={images[imageName + '.png']} />\r\n                                    )\r\n                                    }\r\n                                </u>\r\n                            ))\r\n                        }\r\n                        <br />\r\n                        {\r\n                            isQuiz ?\r\n                            (\r\n                                ImageQuiz(data.phrase)\r\n                            ) : (\r\n                                data.phrase\r\n                            )\r\n                        }\r\n                    </div>\r\n                    \r\n                ))\r\n                \r\n            }\r\n            {console.log(lienData)}\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\n\r\nfunction getImagePaths(i) {\r\n    let images = {};\r\n    i.keys().map((item) => { images[item.replace('./', '')] = i(item); });\r\n    return images;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAGA,MAAMC,MAAM,GAAGC,aAAa,CAACC,OAAO,CAACC,OAAR,CAAgB,cAAhB,EAAgC,KAAhC,EAAuC,oBAAvC,CAAD,CAA5B;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;EACpC,IAAIC,QAAQ,GAAGL,OAAO,CAAC,UAAUG,IAAV,GAAiB,OAAlB,CAAtB;;EACIG,OAAO,CAACC,GAAR,CAAYF,QAAZ;EACJ,oBACI;IAAA,WAEQA,QAAQ,CAACG,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACT;MAAiB,EAAE,EAAEA,KAArB;MAAA,wBAEI;QAAA;QAAA;QAAA;MAAA,QAFJ,EAIQD,IAAI,CAACE,UAAL,CAAgBH,GAAhB,CAAoB,CAACI,SAAD,EAAYC,UAAZ,kBAChB;QAAA,UAEKD,SAAS,IAAId,MAAb,GACG,IADH,gBAGG;UAAK,EAAE,EAAC,WAAR;UAAoB,GAAG,EAAEA,MAAM,CAACc,SAAS,GAAG,MAAb;QAA/B;UAAA;UAAA;UAAA;QAAA;MALR,GAAQC,UAAR;QAAA;QAAA;QAAA;MAAA,QADJ,CAJR,eAgBI;QAAA;QAAA;QAAA;MAAA,QAhBJ,EAkBQT,MAAM,GAEFP,SAAS,CAACY,IAAI,CAACK,MAAN,CAFP,GAIFL,IAAI,CAACK,MAtBjB;IAAA,GAAUJ,KAAV;MAAA;MAAA;MAAA;IAAA,QADJ,CAFR,EAiCKJ,OAAO,CAACC,GAAR,CAAYF,QAAZ,CAjCL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAsCH;KAzCeH,S;;AA4ChB,SAASH,aAAT,CAAuBgB,CAAvB,EAA0B;EACtB,IAAIjB,MAAM,GAAG,EAAb;EACAiB,CAAC,CAACC,IAAF,GAASR,GAAT,CAAcS,IAAD,IAAU;IAAEnB,MAAM,CAACmB,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiCH,CAAC,CAACE,IAAD,CAAlC;EAA2C,CAApE;EACA,OAAOnB,MAAP;AACH"},"metadata":{},"sourceType":"module"}