{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ced\\\\Desktop\\\\Uni\\\\Inforoute\\\\TP1_Inforoute\\\\tp1_inforoute\\\\src\\\\components\\\\ImageWord.js\";\nimport { ImageQuiz } from './ImageQuiz';\nimport * as fs from 'fs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ImageWord(path, isQuiz) {\n  let lienData = require('./../texte/phrase/' + path + '.json');\n\n  const shuffle = arr => [...arr].sort(() => Math.random() - 0.5);\n\n  console.log(path); //let images = getImagePaths(require.context(, false, /\\.(png|jpe?g|svg)$/));\n\n  fs.readdirSync(`./../images/${path}`).forEach(file => {\n    console.log(file); // 'brave.png'\n  });\n  let ret = lienData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    id: index,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), data.imageListe.map((imageName, indexImage) => /*#__PURE__*/_jsxDEV(\"u\", {\n      children: imageName == images ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"imageWord\",\n        src: images[imageName + '.png']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }, this)\n    }, indexImage, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 21\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), isQuiz ? ImageQuiz(data, data.phrase) : data.phrase]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this));\n  if (isQuiz) return shuffle(ret);else return ret;\n}\n_c = ImageWord;\nexport function getImagePaths(i) {\n  let images = {};\n  i.keys().map(item => {\n    images[item.replace('./', '')] = i(item);\n  });\n  return images;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageWord\");","map":{"version":3,"names":["ImageQuiz","fs","ImageWord","path","isQuiz","lienData","require","shuffle","arr","sort","Math","random","console","log","readdirSync","forEach","file","ret","map","data","index","imageListe","imageName","indexImage","images","phrase","getImagePaths","i","keys","item","replace"],"sources":["C:/Users/Ced/Desktop/Uni/Inforoute/TP1_Inforoute/tp1_inforoute/src/components/ImageWord.js"],"sourcesContent":["import { ImageQuiz } from './ImageQuiz';\r\nimport * as fs from 'fs';\r\n\r\n\r\n\r\n\r\nexport function ImageWord(path, isQuiz) {\r\n\r\n    let lienData = require('./../texte/phrase/' + path + '.json');\r\n    const shuffle = arr => [...arr].sort(() => Math.random() - 0.5);\r\n    console.log(path)\r\n    //let images = getImagePaths(require.context(, false, /\\.(png|jpe?g|svg)$/));\r\n    fs.readdirSync(`./../images/${path}`).forEach(file => {\r\n        console.log(file); // 'brave.png'\r\n      });\r\n\r\n    let ret = lienData.map((data, index) => (\r\n        <div key={index} id={index}>\r\n            <br />\r\n            {\r\n                data.imageListe.map((imageName, indexImage) => (\r\n                    <u key={indexImage}>\r\n                        {imageName == images ? (\r\n                            null\r\n                        ) : (\r\n                            <img id=\"imageWord\" src={images[imageName + '.png']} />\r\n                        )\r\n                        }\r\n                    </u>\r\n                ))\r\n            }\r\n            <br />\r\n            {\r\n                isQuiz ?\r\n                    (\r\n                        ImageQuiz(data, data.phrase)\r\n                    ) : (\r\n                        data.phrase\r\n                    )\r\n            }\r\n        </div>\r\n    ))\r\n\r\n\r\n    if (isQuiz)\r\n        return (shuffle(ret));\r\n    else\r\n        return (ret);\r\n\r\n}\r\n\r\n\r\nexport function getImagePaths(i) {\r\n    let images = {};\r\n    i.keys().map((item) => { images[item.replace('./', '')] = i(item); });\r\n    return images;\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;AAKA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyBC,MAAzB,EAAiC;EAEpC,IAAIC,QAAQ,GAAGC,OAAO,CAAC,uBAAuBH,IAAvB,GAA8B,OAA/B,CAAtB;;EACA,MAAMI,OAAO,GAAGC,GAAG,IAAI,CAAC,GAAGA,GAAJ,EAASC,IAAT,CAAc,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAApC,CAAvB;;EACAC,OAAO,CAACC,GAAR,CAAYV,IAAZ,EAJoC,CAKpC;;EACAF,EAAE,CAACa,WAAH,CAAgB,eAAcX,IAAK,EAAnC,EAAsCY,OAAtC,CAA8CC,IAAI,IAAI;IAClDJ,OAAO,CAACC,GAAR,CAAYG,IAAZ,EADkD,CAC/B;EACpB,CAFH;EAIA,IAAIC,GAAG,GAAGZ,QAAQ,CAACa,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACnB;IAAiB,EAAE,EAAEA,KAArB;IAAA,wBACI;MAAA;MAAA;MAAA;IAAA,QADJ,EAGQD,IAAI,CAACE,UAAL,CAAgBH,GAAhB,CAAoB,CAACI,SAAD,EAAYC,UAAZ,kBAChB;MAAA,UACKD,SAAS,IAAIE,MAAb,GACG,IADH,gBAGG;QAAK,EAAE,EAAC,WAAR;QAAoB,GAAG,EAAEA,MAAM,CAACF,SAAS,GAAG,MAAb;MAA/B;QAAA;QAAA;QAAA;MAAA;IAJR,GAAQC,UAAR;MAAA;MAAA;MAAA;IAAA,QADJ,CAHR,eAcI;MAAA;MAAA;MAAA;IAAA,QAdJ,EAgBQnB,MAAM,GAEEJ,SAAS,CAACmB,IAAD,EAAOA,IAAI,CAACM,MAAZ,CAFX,GAIEN,IAAI,CAACM,MApBrB;EAAA,GAAUL,KAAV;IAAA;IAAA;IAAA;EAAA,QADM,CAAV;EA4BA,IAAIhB,MAAJ,EACI,OAAQG,OAAO,CAACU,GAAD,CAAf,CADJ,KAGI,OAAQA,GAAR;AAEP;KA3Cef,S;AA8ChB,OAAO,SAASwB,aAAT,CAAuBC,CAAvB,EAA0B;EAC7B,IAAIH,MAAM,GAAG,EAAb;EACAG,CAAC,CAACC,IAAF,GAASV,GAAT,CAAcW,IAAD,IAAU;IAAEL,MAAM,CAACK,IAAI,CAACC,OAAL,CAAa,IAAb,EAAmB,EAAnB,CAAD,CAAN,GAAiCH,CAAC,CAACE,IAAD,CAAlC;EAA2C,CAApE;EACA,OAAOL,MAAP;AACH"},"metadata":{},"sourceType":"module"}